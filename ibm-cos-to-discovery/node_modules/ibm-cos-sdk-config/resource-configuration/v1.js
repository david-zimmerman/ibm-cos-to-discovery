"use strict";
/**
 * Copyright 2019 IBM All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var extend = require("extend");
var ibm_cloud_sdk_core_1 = require("ibm-cloud-sdk-core");
var common_1 = require("../lib/common");
/**
 * REST API used to configure Cloud Object Storage buckets.  This version of the API only supports reading bucket metadata, setting IP access controls, and configuring logging and monitoring services.
 */
var ResourceConfigurationV1 = /** @class */ (function (_super) {
    __extends(ResourceConfigurationV1, _super);
    /**
     * Construct a ResourceConfigurationV1 object.
     *
     * @param {Object} options - Options for the service.
     * @param {string} [options.url] - The base url to use when contacting the service (e.g. 'https://gateway.watsonplatform.net/v1'). The base url may differ between IBM Cloud regions.
     * @param {string} [options.iam_access_token] - An IAM access token fully managed by the application. Responsibility falls on the application to refresh the token, either before it expires or reactively upon receiving a 401 from the service, as any requests made with an expired token will fail.
     * @param {string} [options.iam_apikey] - An API key that can be used to request IAM tokens. If this API key is provided, the SDK will manage the token and handle the refreshing.
     * @param {string} [options.iam_url] - An optional URL for the IAM service API. Defaults to 'https://iam.cloud.ibm.com/identity/token'.
     * @param {string} [options.iam_client_id] - client id (username) for request to iam service
     * @param {string} [options.iam_client_secret] - client secret (password) for request to iam service
     * @param {boolean} [options.use_unauthenticated] - Set to `true` to avoid including an authorization header. This option may be useful for requests that are proxied.
     * @param {Object} [options.headers] - Default headers that shall be included with every request to the service.
     * @param {boolean} [options.headers.X-Watson-Learning-Opt-Out] - Set to `true` to opt-out of data collection. By default, all IBM Watson services log requests and their results. Logging is done only to improve the services for future users. The logged data is not shared or made public. If you are concerned with protecting the privacy of users' personal information or otherwise do not want your requests to be logged, you can opt out of logging.
     * @constructor
     * @returns {ResourceConfigurationV1}
     */
    function ResourceConfigurationV1(options) {
        return _super.call(this, options) || this;
    }
    /*************************
     * buckets
     ************************/
    /**
     * Returns metadata for the specified bucket.
     *
     * Returns metadata for the specified bucket.
     *
     * @param {Object} params - The parameters to send to the service.
     * @param {string} params.bucket - Name of a bucket.
     * @param {Object} [params.headers] - Custom request headers
     * @param {Function} [callback] - The callback that handles the response.
     * @returns {Promise<any>|void}
     */
    ResourceConfigurationV1.prototype.getBucketConfig = function (params, callback) {
        var _this = this;
        var _params = extend({}, params);
        var _callback = callback;
        var requiredParams = ['bucket'];
        if (!_callback) {
            return new Promise(function (resolve, reject) {
                _this.getBucketConfig(params, function (err, bod, res) {
                    err ? reject(err) : _params.return_response ? resolve(res) : resolve(bod);
                });
            });
        }
        var missingParams = ibm_cloud_sdk_core_1.getMissingParams(_params, requiredParams);
        if (missingParams) {
            return _callback(missingParams);
        }
        var path = {
            'bucket': _params.bucket
        };
        var sdkHeaders = common_1.getSdkHeaders('resource_configuration', 'v1', 'getBucketConfig');
        var parameters = {
            options: {
                url: '/b/{bucket}',
                method: 'GET',
                path: path,
            },
            defaultOptions: extend(true, {}, this._options, {
                headers: extend(true, sdkHeaders, {
                    'Accept': 'application/json',
                }, _params.headers),
            }),
        };
        return this.createRequest(parameters, _callback);
    };
    ;
    /**
     * Make changes to a bucket's configuration.
     *
     * Updates a bucket using [JSON Merge Patch](https://tools.ietf.org/html/rfc7396). This request is used to add
     * functionality (like an IP access filter) or to update existing parameters.  **Primitives are overwritten and
     * replaced in their entirety. It is not possible to append a new (or to delete a specific) value to an array.**
     * Arrays can be cleared by updating the parameter with an empty array `[]`. Only updates specified mutable fields.
     * Please don't use `PATCH` trying to update the number of objects in a bucket, any timestamps, or other non-mutable
     * fields.
     *
     * @param {Object} params - The parameters to send to the service.
     * @param {string} params.bucket - Name of a bucket.
     * @param {Firewall} [params.firewall] - An access control mechanism based on the network (IP address) where request
     * originated. Requests not originating from IP addresses listed in the `allowed_ip` field will be denied regardless
     * of any access policies (including public access) that might otherwise permit the request.  Viewing or updating the
     * `Firewall` element requires the requester to have the `manager` role.
     * @param {ActivityTracking} [params.activity_tracking] - Enables sending log data to Activity Tracker and LogDNA to
     * provide visibility into object read and write events. All object events are sent to the activity tracker instance
     * defined in the `activity_tracker_crn` field.
     * @param {MetricsMonitoring} [params.metrics_monitoring] - Enables sending metrics to IBM Cloud Monitoring. All
     * metrics are sent to the IBM Cloud Monitoring instance defined in the `monitoring_crn` field.
     * @param {string} [params.if_match] - An Etag previously returned in a header when fetching or updating a bucket's
     * metadata. If this value does not match the active Etag, the request will fail.
     * @param {Object} [params.headers] - Custom request headers
     * @param {Function} [callback] - The callback that handles the response.
     * @returns {Promise<any>|void}
     */
    ResourceConfigurationV1.prototype.updateBucketConfig = function (params, callback) {
        var _this = this;
        var _params = extend({}, params);
        var _callback = callback;
        var requiredParams = ['bucket'];
        if (!_callback) {
            return new Promise(function (resolve, reject) {
                _this.updateBucketConfig(params, function (err, bod, res) {
                    err ? reject(err) : _params.return_response ? resolve(res) : resolve(bod);
                });
            });
        }
        var missingParams = ibm_cloud_sdk_core_1.getMissingParams(_params, requiredParams);
        if (missingParams) {
            return _callback(missingParams);
        }
        var body = {
            'firewall': _params.firewall,
            'activity_tracking': _params.activity_tracking,
            'metrics_monitoring': _params.metrics_monitoring
        };
        var path = {
            'bucket': _params.bucket
        };
        var sdkHeaders = common_1.getSdkHeaders('resource_configuration', 'v1', 'updateBucketConfig');
        var parameters = {
            options: {
                url: '/b/{bucket}',
                method: 'PATCH',
                body: body,
                path: path,
            },
            defaultOptions: extend(true, {}, this._options, {
                headers: extend(true, sdkHeaders, {
                    'Content-Type': 'application/json',
                    'if-match': _params.if_match
                }, _params.headers),
            }),
        };
        return this.createRequest(parameters, _callback);
    };
    ;
    ResourceConfigurationV1.URL = 'https://config.cloud-object-storage.cloud.ibm.com/v1';
    return ResourceConfigurationV1;
}(ibm_cloud_sdk_core_1.BaseService));
ResourceConfigurationV1.prototype.name = 'resource_configuration';
ResourceConfigurationV1.prototype.serviceVersion = 'v1';
module.exports = ResourceConfigurationV1;
//# sourceMappingURL=v1.js.map